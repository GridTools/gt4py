# -----------------------------------------------------------------------
# This file contains 'cog' snippets (https://nedbatchelder.com/code/cog/) 
# to keep version numbers in sync with 'constraints.txt'
# -----------------------------------------------------------------------

default_language_version:
  python: python3.10
repos:
# - repo: meta
#   hooks:
#   - id: check-hooks-apply
#   - id: check-useless-excludes
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.6.0
  hooks:
  - id: pretty-format-ini
    args: [--autofix]
    exclude: tox.ini
  - id: pretty-format-toml
    args: [--autofix]
  - id: pretty-format-yaml
    args: [--autofix, --preserve-quotes, --indent, "2"]

- repo: https://github.com/pre-commit/mirrors-prettier
  rev: v3.0.0-alpha.4
  hooks:
  - id: prettier
    types_or: [markdown, json]

- repo: https://github.com/Lucas-C/pre-commit-hooks
  rev: v1.5.5
  hooks:
  - id: insert-license
    exclude: ^\..*$
    types: [python]
    args: [--comment-style, "|#|", --license-filepath, ./LICENSE_HEADER.txt, --fuzzy-match-generates-todo]

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.4.0
  hooks:
  - id: check-case-conflict
  - id: check-merge-conflict
  - id: check-toml
  - id: check-yaml
  - id: debug-statements

- repo: https://github.com/astral-sh/ruff-pre-commit
  ##[[[cog
  ## import re
  ## version = re.search('ruff==([0-9\.]*)', open("constraints.txt").read())[1]
  ## print(f"rev: v{version}")
  ##]]]
  rev: v0.6.4
  ##[[[end]]]
  hooks:
    # Run the linter.
    # TODO: include tests here
  - id: ruff
    files: ^src/
    args: [--fix]
    # Run the formatter.
  - id: ruff-format

- repo: https://github.com/pre-commit/mirrors-mypy
  ##[[[cog
  ## import re
  ## version = re.search('mypy==([0-9\.]*)', open("constraints.txt").read())[1]
  ## print(f"#========= FROM constraints.txt: v{version} =========")
  ##]]]
  #========= FROM constraints.txt: v1.11.2 =========
  ##[[[end]]]
  rev: v1.11.2  # MUST match version ^^^^ in constraints.txt (if the mirror is up-to-date)
  hooks:
  - id: mypy
    additional_dependencies:  # versions from constraints.txt
    ##[[[cog
    ## import re, sys
    ## if sys.version_info >= (3, 11):
    ##    import tomllib
    ## else:
    ##    import tomli as tomllib
    ## constraints = open("constraints.txt").read()
    ## project = tomllib.loads(open("pyproject.toml").read())
    ## packages = [re.match('^([\w-][\w\d-]*)', r)[1] for r in project["project"]["dependencies"] if r.strip()]
    ## for pkg in packages:
    ##     print(f"- {pkg}==" + str(re.search(f'\n{pkg}==([0-9\.]*)', constraints)[1]))
    ##]]]
    - astunparse==1.6.3
    - attrs==24.2.0
    - black==24.8.0
    - boltons==24.0.0
    - cached-property==1.5.2
    - click==8.1.7
    - cmake==3.30.2
    - cytoolz==0.12.3
    - deepdiff==8.0.1
    - devtools==0.12.2
    - factory-boy==3.3.1
    - frozendict==2.4.4
    - gridtools-cpp==2.3.4
    - importlib-resources==6.4.4
    - jinja2==3.1.4
    - lark==1.2.2
    - mako==1.3.5
    - nanobind==2.1.0
    - ninja==1.11.1.1
    - numpy==1.24.4
    - packaging==24.1
    - pybind11==2.13.5
    - setuptools==74.1.2
    - tabulate==0.9.0
    - typing-extensions==4.12.2
    - xxhash==3.0.0
    ##[[[end]]]
    - types-tabulate
    - types-typed-ast
    args: [--no-install-types]
    exclude: |
      (?x)^(
      setup.py |
      build/.* |
      ci/.* |
      docs/.* |
      tests/.*
      )$
