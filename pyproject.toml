[build-system]
requires = ["hatchling>=1.6.0"]
build-backend = "hatchling.build"

[project]
name = "gt4py"
description = "Python library for generating high-performance implementations of stencil kernels for weather and climate modeling from a domain-specific language (DSL)."
dynamic = ["version"]
authors = [{ name = "ETH Zurich", email = "gridtools@cscs.ch" }]
readme = "README.rst"
requires-python = ">=3.8"
keywords = [
  "gridtools",
  "gt4py",
  "climate",
  "forecasting",
  "hpc",
  "nwp",
  "stencil",
  "weather",
]
license = { text = "GPL-3.0-or-later" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Environment :: GPU :: NVIDIA CUDA",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: POSIX",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Atmospheric Science",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
  # -- cartesian --
  "attrs>=21.3",
  "black>=22.3",
  "cached-property>=1.5",
  "click>=7.1",
  "gridtools-cpp>=2.2.2,==2.*",
  "jinja2>=2.10",
  "numpy>=1.15",
  "scipy>=1.4",
  "packaging>=20.0",
  "pybind11>=2.5",
  "tabulate>=0.8",
  "setuptools>=60.6",
  "typing-extensions>=4.2",
  "astunparse>=1.6.3;python_version<'3.9'",
  # -- eve / gtc --
  "boltons>=20.0",
  "cytoolz>=0.11",
  "devtools>=0.5",
  "deepdiff>=5.8",
  "frozendict>=2.3",
  "mako>=1.1",
  "networkx>=2.4",
  "toolz>=0.11",
  "typing_inspect>=0.6.0",
  "xxhash>=1.4.4,<3.1.0",
]

[project.optional-dependencies]
format = ["clang-format>=9.0"]
cuda = ["cupy"]
cuda110 = ["cupy-cuda110"]
cuda111 = ["cupy-cuda111"]
cuda112 = ["cupy-cuda112"]
cuda113 = ["cupy-cuda113"]
cuda114 = ["cupy-cuda114"]
cuda115 = ["cupy-cuda115"]
cuda116 = ["cupy-cuda116"]
cuda117 = ["cupy-cuda117"]
cuda118 = ["cupy-cuda118"]
dace = ["dace>=0.14.1,<0.15", "sympy"]
formatting = [" clang-format>=9.0"]
testing = ["hypothesis>=4.14", "pytest~=6.1", "tox~=3.14"]

[project.scripts]
gtpyc = "gt4py.cli:gtpyc"

[project.urls]
homepage = "https://gridtools.github.io/"
documentation = "https://gridtools.github.io/gt4py"
repository = "https://github.com/GridTools/gt4py"

[tool.black]
line-length = 100
target_version = ["py38", "py39", "py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.gt_cache
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.html]
directory = "tests/_reports/coverage_html"

[tool.coverage.paths]
source = ["src/", ".tox/py*/lib/python3.*/site-packages/"]

[tool.coverage.report]
exclude_lines = [
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
]
ignore_errors = true

[tool.coverage.run]
branch = true
source_pkgs = ["gt4py"]

[tool.hatch.version]
path = "src/gt4py/__about__.py"
pattern = '^__version__: *Final *= *\"(?P<version>.+?)\" *$'

[tool.isort]
skip_glob = ["*.venv/**", "_local/**"]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 100
lines_after_imports = 2
multi_line_output = 3
use_parentheses = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
known_first_party = ["gt4py", "tests", "__externals__", "__gtscript__"]
known_third_party = [
  "attr",
  "black",
  "boltons",
  "cached_property",
  "click",
  "dace",
  "devtools",
  "factory",
  "hypothesis",
  "jinja2",
  "mako",
  "networkx",
  "numpy",
  "packaging",
  "pkg_resources",
  "pybind11",
  "pytest",
  "pytest_factoryboy",
  "setuptools",
  "tabulate",
  "typing_extensions",
  "xxhash",
]

[tool.mypy]
follow_imports = "silent"
ignore_missing_imports = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "gt4py.eve.*"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "gt4py.cartesian.gtc.*"
allow_untyped_defs = true

[tool.pytest.ini_options]
addopts = "--cov-config=setup.cfg --cov-report html"
norecursedirs = ["dist", "build", "_local*", ".*"]
testpaths = "tests"
