include:
- remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

.py310: &py310
  PYVERSION_PREFIX: py310
  PYVERSION: 3.10.9

.py39: &py39
  PYVERSION_PREFIX: py39
  PYVERSION: 3.9.1

.py38: &py38
  PYVERSION_PREFIX: py38
  PYVERSION: 3.8.5

stages:
- baseimage
- image
- test


.build_baseimage:
  stage: baseimage
  # we create a tag that depends on the SHA value of ci/base.Dockerfile, this way
  # a new base image is only built when the SHA of this file changes
  # If there are more dependency files that should change the tag-name of the base container
  # image, they can be added too.
  # Since the base image name is runtime dependent, we need to carry the value of it to
  # the following jobs via a dotenv file.
  before_script:
  - DOCKER_TAG=`sha256sum ci/base.Dockerfile | head -c 16`
  - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/$ARCH/base/gt4py-ci:$DOCKER_TAG-$PYVERSION
  - echo "BASE_IMAGE_${PYVERSION_PREFIX}=$PERSIST_IMAGE_NAME" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  variables:
    # change to 'always' if you want to rebuild, even if target tag exists already (if-not-exists is the default, i.e. we could also skip the variable)
    CSCS_REBUILD_POLICY: if-not-exists
    DOCKERFILE: ci/base.Dockerfile
    DOCKER_BUILD_ARGS: '["PYVERSION=$PYVERSION", "CI_PROJECT_DIR=$CI_PROJECT_DIR"]'
build baseimage x86_64:
  extends: [.container-builder-cscs-zen2, .build_baseimage]
build baseimage aarch64:
  extends: [.container-builder-cscs-gh200, .build_baseimage]

build py38 baseimage x86_64:
  extends: build baseimage x86_64
  variables:
    <<: *py38
build py38 baseimage aarch64:
  extends: build baseimage aarch64
  variables:
    <<: *py38

build py39 baseimage x86_64:
  extends: build baseimage x86_64
  variables:
    <<: *py39
build py39 baseimage aarch64:
  extends: build baseimage aarch64
  variables:
    <<: *py39

build py310 baseimage x86_64:
  extends: build baseimage x86_64
  variables:
    <<: *py310
build py310 baseimage aarch64:
  extends: build baseimage aarch64
  variables:
    <<: *py310


build image:
  stage: image
  variables:
    # make sure we use a unique name here, otherwise we could create a race condition, when multiple pipelines
    # are running.
    PERSIST_IMAGE_NAME: $CSCS_REGISTRY_PATH/$ARCH/gt4py/gt4py-ci:$CI_COMMIT_SHA-$PYVERSION
    DOCKERFILE: ci/checkout.Dockerfile
    DOCKER_BUILD_ARGS: '["PYVERSION=$PYVERSION", "BASE_IMAGE=${BASE_IMAGE_${PYVERSION_PREFIX}}"]'
build image x86_64:
  extends: .container-builder-cscs-zen2
build image aarch64:
  extends: .container-builder-cscs-gh200

build py38 image x86_64:
  extends: build image x86_64
  needs: ["build py38 baseimage x86_64"]
  variables:
    <<: *py38
build py38 image aarch64:
  extends: build image aarch64
  needs: ["build py38 baseimage aarch64"]
  variables:
    <<: *py38

build py39 image x86_64:
  extends: build image x86_64
  needs: ["build py39 baseimage x86_64"]
  variables:
    <<: *py39
build py39 image aarch64:
  extends: build image aarch64
  needs: ["build py39 baseimage aarch64"]
  variables:
    <<: *py39

build py310 image x86_64:
  extends: build image x86_64
  needs: ["build py310 baseimage x86_64"]
  variables:
    <<: *py310
build py310 image aarch64:
  extends: build image aarch64
  needs: ["build py310 baseimage aarch64"]
  variables:
    <<: *py310


test helper:
  stage: test
  image: $CSCS_REGISTRY_PATH/$ARCH/gt4py/gt4py-ci:$CI_COMMIT_SHA-$PYVERSION
  script:
  - cd /gt4py.src
  - python -c "import cupy"
  - tox run -e $SUBPACKAGE-$PYVERSION_PREFIX$VARIANT$SUBVARIANT
  parallel:
    matrix:
    - SUBPACKAGE: [cartesian, storage]
      VARIANT: [-internal, -dace]
      SUBVARIANT: [-cuda11x, -cpu]
    - SUBPACKAGE: eve
  variables:
    CRAY_CUDA_MPS: 1
    SLURM_JOB_NUM_NODES: 1
    SLURM_TIMELIMIT: 120
    NUM_PROCESSES: auto
    VIRTUALENV_SYSTEM_SITE_PACKAGES: 1

test py38 x86_64:
  extends: [.container-runner-daint, "test helper"]
  needs: ["build py38 image x86_64"]
  variables:
    <<: *py38
test py38 aarch64:
  extends: [.container-runner-santis-gh200, "test helper"]
  needs: ["build py38 image aarch64"]
  variables:
    <<: *py38

test py39 x86_64:
  extends: [.container-runner-daint, "test helper"]
  needs: ["build py39 image x86_64"]
  variables:
    <<: *py39
test py39 aarch64:
  extends: [.container-runner-santis-gh200, "test helper"]
  needs: ["build py39 image aarch64"]
  variables:
    <<: *py39

test py310:
  extends: test helper
  variables:
    <<: *py310
  parallel:
    matrix:
    - SUBPACKAGE: [cartesian, storage]
      VARIANT: [-internal, -dace]
      SUBVARIANT: [-cuda11x, -cpu]
    - SUBPACKAGE: eve
    - SUBPACKAGE: next
      VARIANT: [-nomesh, -atlas]
      SUBVARIANT: [-cuda11x, -cpu]
test py310 x86_64:
  extends: [.container-runner-daint, "test py310"]
  needs: ["build py310 image x86_64"]
test py310 aarch64:
  extends: [.container-runner-santis-gh200, "test py310"]
  needs: ["build py310 image aarch64"]
