# This file is mainly used to configure package creation with setuptools.
# Documentation:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files
#
# Additionally, it stores settings of other development tools (linters, type checkers, etc..

[metadata]
name = gt4py-functional
author = ETH Zurich
author_email = gridtools@cscs.ch
description = Python API to develop performance portable applications for weather and climate
license = gpl3
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://gridtools.github.io/
project_urls =
    Source Code = https://github.com/GridTools/gt4py

platforms = Linux, Mac

# From: https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
    Operating System :: POSIX
    Programming Language :: Python
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Atmospheric Science
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
package_dir =
    =src
include_package_data = True
python_requires = >= 3.10
install_requires =
    attrs>=20.3
    black>=22.3
    boltons>=20.0
    click>=7.1
    cytoolz>=0.11
    devtools>=0.5
    frozendict>=2.3
    jinja2>=2.10
    mako>=1.1
    networkx>=2.4
    numpy>=1.21
    packaging>=20.0
    pybind11>=2.5
    pydantic>=1.5
    toolz>=0.11
    typing-extensions>=3.7
    xxhash>=1.4.4

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install gt4py[cuda90]` like:
cuda =
    cupy
cuda90 =
    cupy-cuda90
cuda91 =
    cupy-cuda91
cuda92 =
    cupy-cuda92
cuda100 =
    cupy-cuda100
cuda101 =
    cupy-cuda101
cuda102 =
    cupy-cuda102
format =
    clang-format>=9.0

# [options.entry_points]
# # CLI entry points to be installed
# console_scripts =
#     gtpyc = gt4py.cli:gtpyc


#---- Development tools ----

#-- coverage --
[coverage:run]
branch = True
source_pkgs =
    eve
    functional

[coverage:paths]
source =
    src/
    .tox/py*/lib/python3.*/site-packages/

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

ignore_errors = True

[coverage:html]
directory = tests/_reports/coverage_html

#-- flake8 --
[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 100
max-complexity = 15
doctests=true
ignore =
    B008    # Do not perform function calls in argument defaults
    D1      # Public code object needs docstring
    DAR     # Disable dargling errors by default
    E203    # Whitespace before ':' (black formatter breaks this sometimes)
    E501    # Line too long (using Bugbear's B950 warning)
    W503    # Line break occurred before a binary operator

exclude =
    .eggs
    .gt_cache
    .ipynb_checkpoints
    .tox
    _local_
    build
    dist
    docs
    _external_src
    tests/_disabled
    setup.py

per-file-ignores =
    src/eve/extended_typing.py:F401,F405

rst-roles=
    py:mod, mod,
    py:func, func,
    py:data, data,
    py:const, const,
    py:class, class,
    py:meth, meth,
    py:attr, attr,
    py:exc, exc,
    py:obj, obj,


#-- isort --
[tool:isort]
skip_glob =
    *.venv/**
    _local/**
skip_gitignore = true
profile = black
combine_as_imports = True
line_length = 100
lines_after_imports = 2
lexicographical = True
group_by_package = True
default_section = THIRDPARTY
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_first_party = eve,gt4py,tests,__externals__,__gtscript__
known_third_party = atlas4py,attr,black,boltons,click,dace,devtools,factory,hypothesis,jinja2,mako,networkx,numpy,packaging,pkg_resources,pybind11,pydantic,pytest,pytest_factoryboy,setuptools,typing_extensions,xxhash

#-- mypy --
[mypy]
follow_imports = silent
ignore_missing_imports = True
show_column_numbers = True
show_error_codes = True
# TODO enable in a next step
#allow_redefinition = True
#strict_optional = True
#warn_return_any = True
#warn_unused_configs = True
#warn_unused_ignores = True

[mypy-eve.*]
allow_untyped_defs = False

[mypy-gtc.*]
allow_untyped_defs = False


#-- pytest --
[tool:pytest]
# Set coverage options but do not run it by default
addopts = --cov-config=setup.cfg
markers =
    lit_suite: pytest item running a LLVM-lit test suite
norecursedirs =
    dist
    build*
    _local*
    .*
testpaths = tests


#-- sphinx --
#[build_sphinx]
#source_dir = docs
#build_dir = build/sphinx
#warning-is-error = True
