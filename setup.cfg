# This file is mainly used to configure package creation with setuptools.
# Documentation:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files
#
# Additionally, it stores settings of other development tools (linters, type checkers, etc..

[metadata]
name = gt4py
version = attr: gt4py.__about__.__version__
author = ETH Zurich
author_email = gridtools@cscs.ch
description = Python library for generating high-performance implementations of stencil kernels for weather and climate modeling from a domain-specific language (DSL)
license = GPL-3.0-or-later
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst
url = https://gridtools.github.io/gt4py
project_urls =
    Repository = https://github.com/GridTools/gt4py
    Homepage = https://gridtools.github.io/
    Documentation = https://gridtools.github.io/gt4py
platforms = Linux, Mac

# From: https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Environment :: GPU :: NVIDIA CUDA
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
    Operating System :: POSIX
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Atmospheric Science
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
package_dir =
    =src
include_package_data = True
python_requires = >= 3.8
install_requires =
    attrs>=21.3
    black>=22.3
    boltons>=20.0
    cached-property>=1.5
    click>=7.1
    cmake>=3.22
    cytoolz>=0.11
    deepdiff>=5.8
    devtools>=0.6
    frozendict>=2.3
    gridtools-cpp>=2.2.2,==2.*
    jinja2>=2.10
    lark>=1.1.2
    mako>=1.1
    networkx>=2.4
    ninja>=1.10
    numpy>=1.15,<1.24
    packaging>=20.0
    pybind11>=2.5
    scipy>=1.4
    setuptools>=60.6
    tabulate>=0.8
    typing-extensions>=4.2
    astunparse>=1.6.3;python_version<'3.9'
    frozendict>=2.3
    mako>=1.1
    networkx>=2.4
    toolz>=0.11
    typing_inspect>=0.6.0
    xxhash>=1.4.4,<3.1.0

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install gt4py[cuda90]` like:
cuda =
    cupy
cuda110 =
    cupy-cuda110
cuda111 =
    cupy-cuda111
cuda112 =
    cupy-cuda112
cuda113 =
    cupy-cuda113
cuda114 =
    cupy-cuda114
cuda115 =
    cupy-cuda115
cuda116 =
    cupy-cuda116
cuda117 =
    cupy-cuda117
cuda11x =
    cupy-cuda11x
dace =
    dace>=0.14.1,<0.15
    sympy
formatting =
    clang-format>=9.0
testing =
    hypothesis>=4.14
    pytest>=6.1
    tox>=4.2

[options.entry_points]
# CLI entry points to be installed
console_scripts =
    gtpyc = gt4py.cartesian.cli:gtpyc

[options.packages.find]
where = src

#---- Other tools ----
#-- coverage --
[coverage:run]
branch = True
source_pkgs =
    gt4py

[coverage:paths]
source =
    src/
    .tox/py*/lib/python3.*/site-packages/

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

ignore_errors = True

[coverage:html]
directory = tests/_reports/coverage_html

#-- flake8 --
[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 100
max-complexity = 15
doctests = true
ignore =
    B008    # Do not perform function calls in argument defaults
    B028    # Consider replacing f"'{foo}'" with f"{foo!r}"  # TODO: review this ignore
    D1      # Public code object needs docstring
    DAR     # Disable dargling errors by default
    E203    # Whitespace before ':' (black formatter breaks this sometimes)
    E501    # Line too long (using Bugbear's B950 warning)
    W503    # Line break occurred before a binary operator

exclude =
    .eggs
    .gt_cache
    .ipynb_checkpoints
    .tox
    _local/
    build
    dist
    docs
    tests/_disabled
    setup.py

per-file-ignores =
    src/gt4py/eve/extended_typing.py:F401,F405

rst-roles =
    py:mod, mod,
    py:func, func,
    py:data, data,
    py:const, const,
    py:class, class,
    py:meth, meth,
    py:attr, attr,
    py:exc, exc,
    py:obj, obj,

#-- isort --
[tool:isort]
skip_glob =
    *.venv/**
    _local/**
skip_gitignore = true
profile = black
combine_as_imports = True
line_length = 100
lines_after_imports = 2
lexicographical = True
group_by_package = True
default_section = THIRDPARTY
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_first_party = gt4py,tests,__externals__,__gtscript__
known_third_party = attr,black,boltons,cached_property,click,dace,devtools,factory,hypothesis,jinja2,mako,networkx,numpy,packaging,pkg_resources,pybind11,pytest,pytest_factoryboy,setuptools,tabulate,typing_extensions,xxhash

#-- mypy --
[mypy]
# Global options
install_types = True
non_interactive = True

# File paths and patterns
namespace_packages = False
exclude = (?x)(
          /_external_src/
          | /build/
          | /setup\.py$
          | /tests/
          )

# Check options
disallow_incomplete_defs = True
no_implicit_optional = True
no_implicit_reexport = True

# Warnings
warn_unused_configs = True
warn_unused_ignores = True
warn_redundant_casts = True

# Formatting
#pretty = True
show_column_numbers = True
show_error_codes = True

# Optional dependencies
[mypy-astunparse.*]
ignore_missing_imports = True

[mypy-cached_property.*]
ignore_missing_imports = True

[mypy-cupy.*]
ignore_missing_imports = True

[mypy-dace.*]
ignore_missing_imports = True

[mypy-gridtools_cpp.*]
ignore_missing_imports = True

[mypy-hypothesis.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-sympy.*]
ignore_missing_imports = True

# GT4Py configs
[mypy-gt4py.cartesian.*]
# TODO: Fix errors and enable these settings
disallow_incomplete_defs = False
disallow_untyped_defs = False
follow_imports = silent
warn_unused_ignores = False

[mypy-gt4py.cartesian.backend.pyext_builder]
ignore_errors = True

[mypy-gt4py.cartesian.frontend.nodes]
ignore_errors = True

[mypy-gt4py.cartesian.frontend.node_util]
ignore_errors = True

[mypy-gt4py.cartesian.frontend.gtscript_frontend]
ignore_errors = True

[mypy-gt4py.cartesian.frontend.defir_to_gtir]
ignore_errors = True

[mypy-gt4py.cartesian.frontend.meta]
ignore_errors = True

[mypy-gt4py.eve.*]
disallow_untyped_defs = True

[mypy-gt4py.eve.extended_typing]
warn_unused_ignores = False

[mypy-gt4py.storage.*]
follow_imports = silent
warn_unused_ignores = False
# TODO: Make this False and fix errors
allow_untyped_defs = True

[mypy-gt4py.next.*]
## TODO: this should be changed to True after a transition period
disallow_incomplete_defs = False

## TODO: the following ignore_errors are only temporary, while
# we work in fixing the wrong typings
[mypy-gt4py.next.ffront.decorator]
ignore_errors = True

[mypy-gt4py.next.type_system.type_translation]
ignore_errors = True

[mypy-gt4py.next.iterator.runtime]
ignore_errors = True

[mypy-gt4py.next.iterator.transforms.global_tmps]
ignore_errors = True

#-- pytest --
[tool:pytest]
# Set coverage options but do not run it by default
addopts = --cov-config=setup.cfg
markers =
    requires_atlas: mark tests that require 'atlas4py' bindings package
    requires_dace: mark tests that require 'dace' package
    requires_gpu: mark tests that require a NVidia GPU (assume 'cupy' and 'cudatoolkit' are installed)

norecursedirs =
    dist
    build
    cpp_backend_tests/build*
    _local/*
    .*
testpaths = tests
