include:
- remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.cscs.yml'

.py310: &py310
  PYVERSION_PREFIX: py310
  PYVERSION: 3.10.8
  CSCS_REGISTRY_NEW: jfrog.svc.cscs.ch
  IMAGE_NAME: contbuild/cscs-ci/gridtools/gt4py

.py39: &py39
  PYVERSION_PREFIX: py39
  PYVERSION: 3.9.15
  CSCS_REGISTRY_NEW: jfrog.svc.cscs.ch
  IMAGE_NAME: contbuild/cscs-ci/gridtools/gt4py

.status: &status
  STATUS_IMAGE: dropd/github-status:latest

stages:
- notifystart
- image
- test
- cleanup

notify_github_pending:
  stage: notifystart
  only: ["master", "staging", "trying"]
  tags: ["kubernetes"]
  image: $STATUS_IMAGE
  script: ./ci/set_github_status.sh pending
  variables:
    <<: *status

build py39:
  extends: .dind
  stage: image
  variables:
    BUILD_IMAGE: $CSCS_REGISTRY_NEW/$IMAGE_NAME/gt4py-ci:$PYVERSION
    <<: *py39
  script:
  - docker login -u $CSCS_REGISTRY_USER -p $CSCS_REGISTRY_PASSWORD $CSCS_REGISTRY_NEW
  - docker pull $BUILD_IMAGE || echo "has not been built yet"
  - docker build --network=host --cache-from $BUILD_IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg PYVERSION=$PYVERSION --build-arg CI_PROJECT_DIR=$CI_PROJECT_DIR -t $BUILD_IMAGE .
  - docker push $BUILD_IMAGE
  only:
  - master
  - staging
  - trying

build py310:
  allow_failure: true
  extends: build py39
  variables:
    <<: *py310

test py39:
  extends: .daint
  only:
  - master
  - staging
  - trying
  needs: ["build py39"]
  stage: test
  image: $CSCS_REGISTRY_NEW/$IMAGE_NAME/gt4py-ci:$PYVERSION
  script:
  - python -c "import cupy"
  - pip install clang-format
  - tox --sitepackages -r -e $PYVERSION_PREFIX-all-cuda112
  variables:
    CRAY_CUDA_MPS: 1
    PULL_IMAGE: "YES"
    SLURM_CONSTRAINT: gpu
    SLURM_JOB_NUM_NODES: 1
    SLURM_TIMELIMIT: 120
    <<: *py39

test py310:
  allow_failure: true
  extends: test py39
  needs: ["build py310"]
  variables:
    <<: *py310

notify_github_success:
  stage: cleanup
  when: on_success
  only: ["master", "staging", "trying"]
  tags: ["kubernetes"]
  image: $STATUS_IMAGE
  script: ./ci/set_github_status.sh success
  variables:
    <<: *status

notify_github_failure:
  stage: cleanup
  when: on_failure
  only: ["master", "staging", "trying"]
  tags: ["kubernetes"]
  image: $STATUS_IMAGE
  script: ./ci/set_github_status.sh failure
  variables:
    <<: *status
