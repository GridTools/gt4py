name: Daily CI

on:
  schedule:
  - cron: '0 4 * * *'

  pull_request:
    branches:
    - main

jobs:
  daily-ci:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        tox-module-factor: ["cartesian", "eve", "next", "storage"]
        os: ["ubuntu-latest"]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install C++ libraries
      if: ${{ matrix.os == 'macos-latest' }}
      shell: bash
      run: |
        brew install boost
    - name: Install C++ libraries
      if: ${{ matrix.os == 'ubuntu-latest' }}
      shell: bash
      run: |
        sudo apt install libboost-dev
        wget https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz
        echo 7bd7ddceec1a1dfdcbdb3e609b60d01739c38390a5f956385a12f3122049f0ca boost_1_76_0.tar.gz > boost_hash.txt
        sha256sum -c boost_hash.txt
        tar xzf boost_1_76_0.tar.gz
        mkdir -p boost/include
        mv boost_1_76_0/boost boost/include/
        echo "BOOST_ROOT=${PWD}/boost" >> $GITHUB_ENV
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          **/setup.cfg
          **/constraints.txt
          **/requirements-dev.txt
    - name: Install tox
      run: |
        python -m pip install -c ./constraints.txt pip setuptools wheel
        python -m pip install -c ./constraints.txt tox
        python -m pip list
    - name: Update requirements
      run: |
        pyversion=${{ matrix.python-version }}
        pyversion_no_dot=${pyversion//./}
        tox run -e requirements-py${pyversion_no_dot}
    - name: Check for updated requirements
      if: ${{ matrix.python-version == '3.8' && matrix.tox-module-factor == 'cartesian' }}
      shell: bash
      run: |
        #echo "REQS_DIFF=$(git diff --no-prefix -U0)" >> $GITHUB_ENV
        echo "REQS_DIFF=-cachetools==5.3.0         # via tox" >> $GITHUB_ENV
    - name: Notify updated requirements (if any)
      if: ${{ env.REQS_DIFF }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: |
          {
            "channel": "C04PXU5R6KY",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Hello, Assistant to the Regional Manager Dwight! *Michael Scott* wants to know where you'd like to take the Paper Company investors to dinner tonight.\n\n *Please select a restaurant:*"
                }
              }
            ]
          }          
    - name: Run tests
      env:
        NUM_PROCESSES: auto
      run: |
        tox run --skip-missing-interpreters -m test-${{ matrix.tox-module-factor }}-cpu
    - name: Notify slack
      if: ${{ failure() }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: '{\"channel\":\"C04PXU5R6KY\",\"text\":\"Daily CI failed: test-${{ matrix.tox-module-factor }}-cpu\"}'
    - name: Notify slack
      if: ${{ success() }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: |
          {"channel":"C04PXU5R6KY","text":"Daily CI: `test-${{ matrix.tox-module-factor }}-cpu` for succeeded!!"}
