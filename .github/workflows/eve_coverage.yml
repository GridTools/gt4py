name: Eve / Coverage

on:
  workflow_run:
    workflows: ["Eve / Test"]
    types:
    - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      PY_VERSION: "3.10"
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PY_VERSION }}

    - name: Install python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip coverage

    - name: Download coverage artifacts
      uses: actions/github-script@v3.1.0
      with:
        script: |
          var artifacts = await github.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: ${{ github.event.workflow_run.id }},
          });
          var coverageArtifacts = artifacts.data.artifacts.filter((artifact) => {
            return artifact.name.startsWith("coverage")
          });
          var fs = require('fs');
          coverageArtifacts.forEach((artifact) => {
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: artifact.id,
               archive_format: 'zip',
            });
            fs.writeFileSync('${{github.workspace}}/' + artifact.name + '.zip', Buffer.from(download.data));
          });

          var infoArtifact = artifacts.data.artifacts.filter((artifact) => {
            return artifact.name.startsWith("info")
          })[0];          
          var download = await github.actions.downloadArtifact({
             owner: context.repo.owner,
             repo: context.repo.repo,
             artifact_id: infoArtifact.id,
             archive_format: 'zip',
          });
            fs.writeFileSync('${{github.workspace}}/info.zip', Buffer.from(download.data));
          });
    - run: unzip coverage*.zip
    - run: unzip info.zip

    - name: Upload to codecov.io
      env:
        PR_NUMBER: $(<info.txt)
      uses: codecov/codecov-action@v3
      with:
        files: coverage*.json
        fail_ci_if_error: true
        flags: eve-all
        token: ${{ secrets.CODECOV_TOKEN }}
        override_pr: PR_NUMBER
