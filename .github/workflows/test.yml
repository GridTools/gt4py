name: Tests

on:
  push:
    branches:
    - functional-test
  pull_request:
    branches:
    - functional-test

permissions:
  statuses: write

jobs:
  tox-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        tox-env-factors: ["base"]  #, "atlas"]

    steps:
    - uses: actions/checkout@v2
    - name: Install boost
      run: |
        wget https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz
        echo 7bd7ddceec1a1dfdcbdb3e609b60d01739c38390a5f956385a12f3122049f0ca boost_1_76_0.tar.gz > boost_hash.txt
        sha256sum -c boost_hash.txt
        tar xzf boost_1_76_0.tar.gz
        mkdir -p boost/include
        mv boost_1_76_0/boost boost/include/
        echo "BOOST_ROOT=${PWD}/boost" >> $GITHUB_ENV
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
    - name: Test with tox
      run: |
        pyversion_no_dot="${{ matrix.python-version }}"
        pyversion_no_dot="${pyversion_no_dot/./}"
        tox_env_factor="${{ matrix.tox-env-factors }}"
        pip install tox clang-format
        tox -r -e py${pyversion_no_dot}-${tox_env_factor}
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: tests/_reports/
        retention-days: 5

  coverage-uploads:
    runs-on: ubuntu-latest
    needs: tox-tests

    steps:
    - name: Get coverage artifacts
      uses: actions/download-artifact@v2
      with:
        name: code-coverage-report
        path: coverage_html

    - name: Upload to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: tests/_reports/coverage.xml
        #flags: unittests # optional
        name: gt4py-functional
        fail_ci_if_error: false # optional (default = false)
        verbose: true # optional (default = false)

    - name: Setup smokeshow uploads
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Upload reports to smokeshow
      # Info: https://smokeshow.helpmanual.io/
      run: |
        pip install smokeshow
        smokeshow upload coverage_html/*
      env:
        SMOKESHOW_GITHUB_STATUS_DESCRIPTION: Coverage {coverage-percentage}
        SMOKESHOW_GITHUB_COVERAGE_THRESHOLD: 70
        SMOKESHOW_GITHUB_CONTEXT: coverage
        SMOKESHOW_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SMOKESHOW_GITHUB_PR_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        SMOKESHOW_AUTH_KEY: ${{ secrets.SMOKESHOW_AUTH_KEY }}
